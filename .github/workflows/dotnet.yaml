name: Dotnet1
on:
  push:
    branches:
      - master
      - development
    paths:
      - "dotnet/**"
jobs:
  master:
    runs-on: ubuntu-latest
    if: |
      contains(github.ref, 'master') 
    environment: master
    steps:
    - uses: actions/checkout@v2
    # - name: Code-coverage
    #   run: |
    #     cat >> ./Application1_code-coverage.json << ENDOFFILE
    #     {"schemaVersion":1,"label":"Code Coverage","message":"60%","color":"brightgreen"}
    #     ENDOFFILE
    # - name: Deploy
    #   uses: exuanbo/actions-deploy-gist@v1
    #   with:
    #     token: ${{ secrets.GIST_AUTH_TOKEN }}
    #     gist_id: ${{ secrets.GIST_ID }}
    #     file_path: Application1_code-coverage.json

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
    - name: Restore dependencies
      run: |
        cd dotnet/Temperatura.Testes
        dotnet restore 
    - name: Build
      run: |
        cd dotnet/Temperatura.Testes
        dotnet build --no-restore   
        dotnet test --logger "trx;logfilename=testResults.trx"
        dotnet test -p:CollectCoverage=true -p:CoverletOutput=TestResults/ -p:CoverletOutputFormat=opencover --no-build --verbosity normal Temperatura.Testes.csproj
        
    - name: Create Test Coverage Badge
      uses: simon-k/dotnet-code-coverage-badge@v1.0.0
      id: create_coverage_badge
      with:
        label: Unit Test Coverage
        color: brightgreen
        path: dotnet/Temperatura.Testes/TestResults/coverage.opencover.xml
        gist-filename: Application1_code-coverage.json
        gist-id: ${{ secrets.GIST_ID }}
        gist-auth-token: ${{ secrets.GIST_AUTH_TOKEN }}

    - name: Test-Case-coverage
      run: |
        cat >> ./Application1_test_case.json << ENDOFFILE
        {"schemaVersion":1,"label":"Test case","message":"30 passed 2 failed","color":"orange"}
        ENDOFFILE
    - name: Deploy
      uses: exuanbo/actions-deploy-gist@v1
      with:
        token: ${{ secrets.GIST_AUTH_TOKEN }}
        gist_id: ${{ secrets.GIST_ID }}
        file_path: Application1_test_case.json
  development:
    runs-on: ubuntu-latest
    if: |
      contains(github.ref, 'development') 
    environment: development
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
    - name: Restore dependencies
      run: |
        cd dotnet/Temperatura.Testes
        dotnet restore 
    - name: Build
      run: |
        cd dotnet/Temperatura.Testes
        dotnet build --no-restore   
        dotnet test --logger "trx;logfilename=testResults.trx"
        dotnet test -p:CollectCoverage=true -p:CoverletOutput=TestResults/ -p:CoverletOutputFormat=opencover --no-build --verbosity normal Temperatura.Testes.csproj
        
    - name: Create Test Coverage Badge
      uses: simon-k/dotnet-code-coverage-badge@v1.0.0
      id: create_coverage_badge
      with:
        label: Unit Test Coverage
        color: brightgreen
        path: dotnet/Temperatura.Testes/TestResults/coverage.opencover.xml
        gist-filename: Application1_code-coverage.json
        gist-id: ${{ secrets.GIST_ID }}
        gist-auth-token: ${{ secrets.GIST_AUTH_TOKEN }}
    - name: Test-coverage
      run: |
        cat >> ./Application1_test_case.json << ENDOFFILE
        {"schemaVersion":1,"label":"Test case","message":"87 passed 7 failed","color":"orange"}
        ENDOFFILE
    - name: Deploy
      uses: exuanbo/actions-deploy-gist@v1
      with:
        token: ${{ secrets.GIST_AUTH_TOKEN }}
        gist_id: ${{ secrets.GIST_ID }}
        file_path: Application1_test_case.json
    - name: Find Information about Test Cases
      run: |
        cat >> ./testcase.ps1 << ENDOFFILE
        foreach(\$line in Get-Content dotnet\Temperatura.Testes\TestResults\testResults.trx) 
        {
          if(\$line -match '<Counters total="(?<total>.+)" executed="(?<executed>.+)" passed="(?<passed>.+)" failed="(?<failed>.+)" error="(?<error>.+)" ' )
          {
                  \$total=\$(\$Matches.total)
                  \$passed=\$(\$Matches.passed)
                  \$failed=\$(\$Matches.failed)
                  \$test_case = '{"schemaVersion":1,"label":"Test case","message":"' + \$passed + 'passed ' + \$failed + 'failed","color":"orange"}'
                  New-Item testcase.json
                  Set-Content testcase.json \$test_case
          }
        }
        ENDOFFILE
        pwsh ./testcase.ps1
        ls -l




    # - name: Setup .NET
    #   uses: actions/setup-dotnet@v1
    #   with:
    #     dotnet-version: 3.1.301
    # - name: Restore dependencies
    #   run: |
    #     cd dotnet/Temperatura.Testes
    #     dotnet restore 
    # - name: Build
    #   run: |
    #     cd dotnet/Temperatura.Testes
    #     dotnet build --no-restore
    # - name: Test
    #   run: |
    #     cat >> ./test.json << ENDOFFILE
    #     {"schemaVersion":1,"label":"Code Coverage","message":"99%","color":"brightgreen"}
    #     ENDOFFILE
    #     cd dotnet/Temperatura.Testes
    #     dotnet test --logger "trx;logfilename=testResults.trx"
    #     dotnet test -p:CollectCoverage=true -p:CoverletOutput=TestResults/ -p:CoverletOutputFormat=opencover --no-build --verbosity normal Temperatura.Testes.csproj
    
#     - name: Deploy
#       uses: exuanbo/actions-deploy-gist@v1
#       with:
#         token: ${{ secrets.GIST_AUTH_TOKEN }}
#         gist_id: 59e7f69414b444b5d49d612d3861ed8c
#         file_path: test.json


# #         # https://api.github.com/gists/c9c1cfbbae7a084bdb99861f0713de66

# #     # - name: Create Test Coverage Badge
# #     #   uses: simon-k/dotnet-code-coverage-badge@v1.0.0
# #     #   id: create_coverage_badge
# #     #   with:
# #     #     label: Unit Test Coverage
# #     #     color: brightgreen
# #     #     path: dotnet/Temperatura.Testes/TestResults/coverage.opencover.xml
# #     #     gist-filename: code-coverage.json
# #     #     gist-id: 6fba94027676331adec08030de830676
# #     #     gist-auth-token: ${{ secrets.GIST_AUTH_TOKEN }} 

# #     # - uses: sergeysova/gist-read-action@v1
# #     #   id: example-gist
# #     #   with:
# #     #     gist_id: 59e7f69414b444b5d49d612d3861ed8c
# #     #     file_name: App1-dev.json
# #     #     GITHUB_TOKEN: 59e7f69414b444b5d49d612d3861ed8c

# #     # - name: show content
# #     #   run: echo "Hello ${{ steps.example-gist.outputs }}"

# #     # - name: Print code coverage
# #     #   run: echo "Code coverage percentage ${{steps.create_coverage_badge.outputs.percentage}}%"
# #     # - name: Print badge data
# #     #   run: echo "Badge data ${{steps.test_step.outputs.badge}}"     
    
# #     #     export test=test
# #     #     printenv |-----------------|---------------|---------------|