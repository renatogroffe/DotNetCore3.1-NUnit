name: Unit Test With Coverage
on:
  push:
    branches:
      - master
      - dev
    paths:
      - "**/dotnet/**"
  
jobs:
  set-ci-environment:
    runs-on: ubuntu-latest
    steps:
      - name: Get env
        if: contains(github.ref, 'development')
        run: echo "ENVIRONMENT=development" >> $GITHUB_ENV
      - if: contains(github.ref, 'master')
        run: echo "ENVIRONMENT=master" >> $GITHUB_ENV
      - name: set Env
        id: setEnv
        run: |
          export ENVIRONMENT="${{ env.ENVIRONMENT }}"       
          echo "::set-output name=environment::${ENVIRONMENT}"
    outputs:
      environment: ${{ steps.setEnv.outputs.environment }}
  build-and-test:
    runs-on: self-hosted
    needs: set-ci-environment
    environment: ${{ needs.set-ci-environment.outputs.environment }}
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2
      - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
    - name: Restore dependencies
      run: |
        cd dotnet/Temperatura.Testes
        dotnet restore 
    - name: Build
      run: |
        cd dotnet/Temperatura.Testes
        dotnet build --no-restore
    - name: Test
      run: |
        cat >> ./Application1_code-coverage_current-${{ needs.set-ci-environment.outputs.environment }}.json << ENDOFFILE
        {"schemaVersion":1,"label":"Code Coverage","message":"90%","color":"brightgreen"}
        ENDOFFILE
      

      